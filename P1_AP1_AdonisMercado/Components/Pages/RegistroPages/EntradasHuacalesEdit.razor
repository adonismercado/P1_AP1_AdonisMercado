@page "/EntradasHuacales/Edit/{IdEntrada:int}"
@inject EntradaHuacalesService entradaHuacalesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Entrada de Huacal</PageTitle>
<EditForm Model="EntradasHuacales" OnValidSubmit="Guardar" FormName="EditEntradaHuacal">
	<DataAnnotationsValidator/>

	<div class="container">
		<div class="card-header text-center">
			<h5 class="card-title">Editar Entrada de Huacal</h5>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label class="form-label">Fecha</label>
				<InputDate class="form-control" @bind-Value="EntradasHuacales.Fecha"></InputDate>
				<ValidationMessage For="(() => EntradasHuacales.Fecha)" />
			</div>

			<div class="mb-3">
				<label class="form-label">IdEntrada</label>
				<InputNumber class="form-control bg-light text-secondary" @bind-Value="EntradasHuacales.IdEntrada"></InputNumber>
				<ValidationMessage For="(() => EntradasHuacales.IdEntrada)"/>
			</div>

			<div class="mb-3">
				<label class="form-label">NombreCliente</label>
				<InputText class="form-control" @bind-Value="EntradasHuacales.NombreCliente"></InputText>
				<ValidationMessage For="(() => EntradasHuacales.NombreCliente)"/>
			</div>

			<div class="mb-3">
				<label class="form-label">Cantidad</label>
				<InputNumber class="form-control" @bind-Value="EntradasHuacales.Cantidad"></InputNumber>
				<ValidationMessage For="(() => EntradasHuacales.Cantidad)"/>
			</div>

			<div class="mb-3">
				<label class="form-label">Precio</label>
				<InputNumber class="form-control" @bind-Value="EntradasHuacales.Precio"></InputNumber>
				<ValidationMessage For="(() => EntradasHuacales.Precio)"/>
			</div>

			<div class="mb-3">
				<label class="form-label">Importe</label>
				<input class="form-control bg-light text-secondary" value="@(EntradasHuacales.Cantidad * EntradasHuacales.Precio)" readonly/>
			</div>
			@if (!string.IsNullOrWhiteSpace(errorMensaje))
			{
				<div class="alert alert-danger">@errorMensaje</div>
			}
		</div>

		<div class="card-footer text-center">
			<a href="/EntradasHuacales/Index" class="btn btn-secondary">
				<span class="bi bi-arrow-left"></span> Volver	
			</a>

			<button type="submit" class="btn btn-primary bi bi-save"> Guardar</button>
			<buttton type="button" class="btn btn-danger bi bi-trash" @onclick="MostrarModalEliminar"> Eliminar</buttton>
		</div>
	</div>
</EditForm>

@if (mostrarModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header bg-danger text-white">
					<h5 class="modal-title">Confirmar eliminación</h5>
					<button type="button" class="btn-close" @onclick="CerrarModal"></button>
				</div>

				<div class="modal-body">
					<p>¿Está seguro que desea eliminar la entrada del cliente <strong>@EntradasHuacales.NombreCliente</strong>?</p>
				</div>

				<div class="modal-footer">
					<button class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
					<button class="btn btn-danger" @onclick="ConfirmarEliminar">
						<span class="bi bi-trash"></span> Eliminar
					</button>
				</div>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public int IdEntrada { get; set; }

	public EntradasHuacales EntradasHuacales { get; set; } = new EntradasHuacales();
	public string errorMensaje { get; set; } = string.Empty;
	private bool mostrarModal = false;

	protected override async Task OnInitializedAsync()
	{
		if (IdEntrada > 0)
		{
			EntradasHuacales = await entradaHuacalesService.Buscar(IdEntrada);
		}
	}

	public async Task Guardar()
	{
		var modificado = await entradaHuacalesService.Guardar(EntradasHuacales);

		if (modificado)
		{
			navigationManager.NavigateTo("/EntradasHuacales/Index");
		}
		else
		{
			errorMensaje = "No se pudo modificar la entrada correctamente.";
		}
	}

	public void MostrarModalEliminar()
	{
		mostrarModal = true;
	}

	public void CerrarModal()
	{
		mostrarModal = false;
	}

	public async Task ConfirmarEliminar()
	{
		var eliminado = await entradaHuacalesService.Eliminar(IdEntrada);

		if (eliminado)
		{
			navigationManager.NavigateTo("/EntradasHuacales/Index");
			mostrarModal = false;
		}
		else
		{
			errorMensaje = "No se pudo eliminar la entrada correctamente.";
		}
	}
}
